<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.analysis.mapper.ReturnedMoneyMapper">
    
    <resultMap type="ReturnedMoney" id="ReturnedMoneyResult">
        <result property="corpName"    column="corp_name"    />
        <result property="corpCode"    column="corp_code"    />
        <result property="accumulatedCollection"    column="accumulated_collection"    />
        <result property="accumulatedExpenditure"    column="accumulated_expenditure"    />
        <result property="accumulatedProfit"    column="accumulated_profit"    />
        <result property="accumulatedArrears"    column="accumulated_arrears"    />
        <result property="latestcollectionMonth"    column="latestcollection_month"    />
    </resultMap>

    <resultMap type="GeneralCollectionStatistics" id="GeneralCollectionStatisticsResult">
        <result property="customerName"    column="customer_name"    />
        <result property="collectionTotal"    column="collection_total"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="expenditureTotal"    column="expenditure_total"    />
        <result property="samemonthCollection"    column="samemonth_collection"    />
        <result property="samemonthExpenditure"    column="samemonth_expenditure"    />
        <result property="samemonthProfit"    column="samemonth_profit"    />
        <result property="wagesTime"    column="wages_time"    />
    </resultMap>

    <select id="selectReturnedmoneyList"  parameterType="Map"  resultMap="ReturnedMoneyResult">
        SELECT a.corp_name,a.corp_code from mar_company a LEFT JOIN
            mar_customerprojectpay b on a.corp_code=b.corp_code
        where b.customer_code is not null GROUP BY a.corp_code
    </select>
    <select id="selectfinPaymentCollectionBycorpCode"  parameterType="String"  resultMap="ReturnedMoneyResult">
		  SELECT a.accumulated_expenditure,b.accumulated_collection,c.accumulated_arrears,
		   DATE_FORMAT( d.latestcollection_month,'%Y-%m-%d') as  latestcollection_month from
            (SELECT  SUM(b.real_salary) as accumulated_expenditure  from  mar_customerprojectpay a  LEFT JOIN fin_expatriatesalary b
            on a.customer_code=b.customer_code
            where b.customer_code is not null and  a.corp_code =#{corpCode})a ,
          (SELECT SUM(com_bined) as accumulated_collection  from fin_statements where corp_code=#{corpCode} and `status`=3) b,
          (SELECT SUM(com_bined) as accumulated_arrears  from fin_statements where corp_code=#{corpCode} and `status` !=3)c,
          (SELECT max(start_time) as latestcollection_month  from fin_statements where corp_code=#{corpCode} and `status`=3)d
    </select>

    <select id="selectAccumulatedCollectionlist"  parameterType="GeneralCollectionStatistics"  resultMap="GeneralCollectionStatisticsResult">
  		SELECT customer_name,	SUM( com_bined ) collection_total,
			MIN( start_time ) as start_time,
			Max( end_time )  as end_time FROM fin_statements
        WHERE corp_code=#{corpCode} AND `status` = 3
		GROUP BY customer_name
    </select>
    <select id="selectAccumulatedExpenditurelist"  parameterType="GeneralCollectionStatistics"  resultMap="GeneralCollectionStatisticsResult">
            SELECT b.customer_name, SUM( b.real_salary ) expenditure_total,
            MIN( b.months ) as start_time,
            Max( b.months )  as end_time
            from  mar_customerprojectpay a  LEFT JOIN fin_expatriatesalary b
            on a.customer_code=b.customer_code
            where b.customer_code is not null and  a.corp_code =#{corpCode}
            GROUP BY customer_name
    </select>
    <select id="selectAccumulatedProfitlist"  parameterType="GeneralCollectionStatistics"  resultMap="GeneralCollectionStatisticsResult">

        SELECT expa.expenditure_total,sta.collection_total,cus.customer_name from
        ( SELECT b.customer_code, SUM( b.real_salary ) expenditure_total
        from  mar_customerprojectpay a  LEFT JOIN fin_expatriatesalary b
        on a.customer_code=b.customer_code
        where b.customer_code is not null and  a.corp_code =#{corpCode}
        GROUP BY b.customer_code) expa LEFT JOIN
        (SELECT customer_code,	SUM( com_bined ) collection_total
        FROM fin_statements
        WHERE corp_code=#{corpCode} and `status`=3 GROUP BY customer_code )sta
        on expa.customer_code=sta.customer_code
        LEFT JOIN per_customerinfo cus on expa.customer_code=cus.customer_code
        ORDER BY sta.collection_total desc
   </select>

    <select id="selectSamemonthProfitlist"  parameterType="GeneralCollectionStatistics"  resultMap="GeneralCollectionStatisticsResult">
        SELECT cus.customer_name,expa.real_salary as samemonth_expenditure,sta.com_bined as samemonth_collection, expa.months as wages_time from
        (SELECT b.customer_code,  b.real_salary,b.months
        from  mar_customerprojectpay a  LEFT JOIN fin_expatriatesalary b
        on a.customer_code=b.customer_code
        where b.customer_code is not null and  a.corp_code =#{corpCode}) expa LEFT JOIN
        (SELECT customer_code,com_bined ,start_time
        FROM fin_statements
        WHERE corp_code=#{corpCode} and `status`=3 )sta on expa.customer_code=sta.customer_code and DATE_FORMAT(expa.months,'%Y%m')=DATE_FORMAT(sta.start_time,'%Y%m')
        LEFT JOIN per_customerinfo cus on expa.customer_code=cus.customer_code
        where 1=1
        <if test="customerCode != null  and customerCode != ''"> and cus.customer_code=#{customerCode}</if>
        ORDER BY cus.customer_name ,expa.months
  </select>

</mapper>