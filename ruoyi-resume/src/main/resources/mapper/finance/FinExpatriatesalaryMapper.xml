<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.finance.mapper.FinExpatriatesalaryMapper">


    <resultMap type="FinExpatriatesalary" id="FinExpatriatesalaryResult">
        <result property="id"    column="id"    />
        <result property="customerName"    column="customer_name"    />
        <result property="customerTel"    column="customer_tel"    />
        <result property="customerCode"    column="customer_code"    />
        <result property="basicSalary"    column="basic_salary"    />
        <result property="overAttence"    column="over_attence"    />
        <result property="realAttence"    column="real_attence"    />
        <result property="projectSalary"    column="project_salary"    />
        <result property="buzhuSalary"    column="buzhu_salary"    />
        <result property="baoxianSalary"    column="baoxian_salary"    />
        <result property="realSalary"    column="real_salary"    />
        <result property="months"    column="months"    />
        <result property="excelPath"    column="excel_path"    />
        <result property="addDate"    column="add_date"    />
        <result property="addPeople"    column="add_people"    />
    </resultMap>

    <sql id="selectFinExpatriatesalaryVo">
        select id, customer_name, customer_tel, customer_code, basic_salary, over_attence, real_attence, project_salary, buzhu_salary, baoxian_salary, real_salary, months, excel_path, add_date, add_people from fin_expatriatesalary
    </sql>

    <select id="selectFinExpatriatesalaryList" parameterType="FinExpatriatesalary" resultMap="FinExpatriatesalaryResult">
        <include refid="selectFinExpatriatesalaryVo"/>
        <where>
            <if test="customerName != null  and customerName != ''"> and customer_name like concat('%', #{customerName}, '%')</if>
            <if test="customerTel != null  and customerTel != ''"> and customer_tel = #{customerTel}</if>
            <if test="customerCode != null  and customerCode != ''"> and customer_code = #{customerCode}</if>
            <if test="basicSalary != null  and basicSalary != ''"> and basic_salary = #{basicSalary}</if>
            <if test="overAttence != null  and overAttence != ''"> and over_attence = #{overAttence}</if>
            <if test="realAttence != null  and realAttence != ''"> and real_attence = #{realAttence}</if>
            <if test="projectSalary != null  and projectSalary != ''"> and project_salary = #{projectSalary}</if>
            <if test="buzhuSalary != null  and buzhuSalary != ''"> and buzhu_salary = #{buzhuSalary}</if>
            <if test="baoxianSalary != null  and baoxianSalary != ''"> and baoxian_salary = #{baoxianSalary}</if>
            <if test="realSalary != null  and realSalary != ''"> and real_salary = #{realSalary}</if>
            <if test="months != null "> and months = #{months}</if>
            <if test="excelPath != null  and excelPath != ''"> and excel_path = #{excelPath}</if>
            <if test="addDate != null "> and add_date = #{addDate}</if>
            <if test="addPeople != null  and addPeople != ''"> and add_people = #{addPeople}</if>
        </where>
    </select>

    <select id="selectFinExpatriatesalaryById" parameterType="Integer" resultMap="FinExpatriatesalaryResult">
        <include refid="selectFinExpatriatesalaryVo"/>
        where id = #{id}
    </select>

    <insert id="insertFinExpatriatesalary" parameterType="FinExpatriatesalary" useGeneratedKeys="true" keyProperty="id">
        insert into fin_expatriatesalary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerName != null">customer_name,</if>
            <if test="customerTel != null">customer_tel,</if>
            <if test="customerCode != null">customer_code,</if>
            <if test="basicSalary != null">basic_salary,</if>
            <if test="overAttence != null">over_attence,</if>
            <if test="realAttence != null">real_attence,</if>
            <if test="projectSalary != null">project_salary,</if>
            <if test="buzhuSalary != null">buzhu_salary,</if>
            <if test="baoxianSalary != null">baoxian_salary,</if>
            <if test="realSalary != null">real_salary,</if>
            <if test="months != null">months,</if>
            <if test="excelPath != null">excel_path,</if>
            <if test="addDate != null">add_date,</if>
            <if test="addPeople != null">add_people,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerName != null">#{customerName},</if>
            <if test="customerTel != null">#{customerTel},</if>
            <if test="customerCode != null">#{customerCode},</if>
            <if test="basicSalary != null">#{basicSalary},</if>
            <if test="overAttence != null">#{overAttence},</if>
            <if test="realAttence != null">#{realAttence},</if>
            <if test="projectSalary != null">#{projectSalary},</if>
            <if test="buzhuSalary != null">#{buzhuSalary},</if>
            <if test="baoxianSalary != null">#{baoxianSalary},</if>
            <if test="realSalary != null">#{realSalary},</if>
            <if test="months != null">#{months},</if>
            <if test="excelPath != null">#{excelPath},</if>
            <if test="addDate != null">#{addDate},</if>
            <if test="addPeople != null">#{addPeople},</if>
        </trim>
    </insert>

    <update id="updateFinExpatriatesalary" parameterType="FinExpatriatesalary">
        update fin_expatriatesalary
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerName != null">customer_name = #{customerName},</if>
            <if test="customerTel != null">customer_tel = #{customerTel},</if>
            <if test="customerCode != null">customer_code = #{customerCode},</if>
            <if test="basicSalary != null">basic_salary = #{basicSalary},</if>
            <if test="overAttence != null">over_attence = #{overAttence},</if>
            <if test="realAttence != null">real_attence = #{realAttence},</if>
            <if test="projectSalary != null">project_salary = #{projectSalary},</if>
            <if test="buzhuSalary != null">buzhu_salary = #{buzhuSalary},</if>
            <if test="baoxianSalary != null">baoxian_salary = #{baoxianSalary},</if>
            <if test="realSalary != null">real_salary = #{realSalary},</if>
            <if test="months != null">months = #{months},</if>
            <if test="excelPath != null">excel_path = #{excelPath},</if>
            <if test="addDate != null">add_date = #{addDate},</if>
            <if test="addPeople != null">add_people = #{addPeople},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFinExpatriatesalaryById" parameterType="Integer">
        delete from fin_expatriatesalary where id = #{id}
    </delete>

    <delete id="deleteFinExpatriatesalaryByIds" parameterType="String">
        delete from fin_expatriatesalary where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>



    <select id="selectFinExpatriatesalaryBytel" parameterType="FinExpatriatesalary" resultMap="FinExpatriatesalaryResult">
        SELECT b.customer_code from mar_customerprojectpay a
        LEFT JOIN per_customerinfo b on a.customer_code=b.customer_code
        <where>
            <if test="customerTel != null  and customerTel != ''"> and b.customer_tel = #{customerTel}</if>
            <if test="customerName != null  and customerName != ''"> and b.customer_name = #{customerName}</if>
        </where>
        limit 1
    </select>

    <insert id="insertFinExpatriatesalarylist" parameterType="java.util.List" >
            insert into fin_expatriatesalary
            (customer_name,
            customer_tel,
            customer_code,
            basic_salary,
            over_attence,
            real_attence,
            project_salary,
            buzhu_salary,
            baoxian_salary,
            real_salary,
            months,
            excel_path,
            add_date,
            add_people)
        values
        <foreach collection="list" item="proinfo"  index="index" separator=",">
            (#{proinfo.customerName},
            #{proinfo.customerTel},
            #{proinfo.customerCode},
            #{proinfo.basicSalary},
            #{proinfo.overAttence},
            #{proinfo.realAttence},
            #{proinfo.projectSalary},
            #{proinfo.buzhuSalary},
            #{proinfo.baoxianSalary},
            #{proinfo.realSalary},
            #{proinfo.months},
            #{proinfo.excelPath},
            #{proinfo.addDate},
            #{proinfo.addPeople})
        </foreach>
    </insert>
    
</mapper>